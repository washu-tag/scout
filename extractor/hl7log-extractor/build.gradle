plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle'
}

group = 'edu.washu.tag'
version = '1.0.0-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

def temporalVersion = "1.29.0"
def s3Version = "2.20.0"
def checkstyleVersion = "10.21.2"

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework:spring-aspects'
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	implementation "io.temporal:temporal-sdk:${temporalVersion}"
	implementation "io.temporal:temporal-spring-boot-starter:${temporalVersion}"
	implementation "software.amazon.awssdk:s3:${s3Version}"
	implementation "software.amazon.awssdk:apache-client:${s3Version}"
	implementation "org.apache.commons:commons-lang3"
	implementation "org.springframework:spring-jdbc"
	implementation "org.springframework.boot:spring-boot-starter-jdbc"
	implementation "org.postgresql:postgresql"
	implementation "org.flywaydb:flyway-core"
	implementation "org.flywaydb:flyway-database-postgresql"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

checkstyle {
	toolVersion checkstyleVersion
	configFile = file('../../linting_java_checkstyle.xml')
}
