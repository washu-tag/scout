apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
    {{- include "dcm4chee.db.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      dcm4chee-component: db
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dcm4chee.db.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      #initContainers:
      #  - name: take-data-dir-ownership
      #    image: alpine
      #    command:
      #      - chmod
      #      - -R
      #      - '777'
      #      - /var/lib/postgresql/data
      #    volumeMounts:
      #      - name: data
      #        mountPath: /var/lib/postgresql
      subdomain: db
      containers:
        - env:
            - name: POSTGRES_DB
              value: pacsdb
            - name: POSTGRES_PASSWORD
              value: pacs
            - name: POSTGRES_USER
              value: pacs
            - name: TZ
              value: Europe/Paris
          image: dcm4che/postgres-dcm4chee:17.4-34
          name: db
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            #- name: tz
            #  mountPath: /etc
            - name: data
              mountPath: /var/lib/postgresql
              readOnly: false
              mountPropagation: HostToContainer
      volumes:
        #- name: tz
        #  emptyDir: {}
        - name: data
          hostPath:
            path: "{{ .Values.paths.db }}"