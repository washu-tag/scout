name: Post-Commit Tasks

on:
  pull_request:
    types: [opened, reopened, edited, synchronize]
  push:
    branches: [main]

env:
  JAVA_DIST: 'zulu'
  JAVA_VERSION: '21'
  REGISTRY: ghcr.io

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4.2.1
      - uses: actions/setup-python@v5.2.0
        with:
          python-version: '3.12'
      - uses: actions/setup-java@v4
        with:
          distribution: ${{ ENV.JAVA_DIST }}
          java-version: ${{ ENV.JAVA_VERSION }}
      - uses: pre-commit/action@v3.0.1
  build-and-upload-hl7log-extractor:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4.2.1
      - name: 'Build/Cache Image - hl7log-extractor'
        uses: ./.github/actions/docker-build-cache
        with:
          subproject: extractor/hl7log-extractor
          image-name: hl7log-extractor
  build-and-upload-hl7-transformer:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4.2.1
      - name: 'Build/Cache Image - hl7-transformer'
        uses: ./.github/actions/docker-build-cache
        with:
          subproject: extractor/hl7-transformer
          image-name: hl7-transformer
  build-and-upload-pyspark-notebook:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4.2.1
      - name: 'Build/Cache Image - pyspark-notebook'
        uses: ./.github/actions/docker-build-cache
        with:
          subproject: helm/jupyter/notebook
          image-name: pyspark-notebook
  build-and-upload-explorer:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4.2.1
      - name: 'Build/Cache Image - explorer'
        uses: ./.github/actions/docker-build-cache
        with:
          subproject: explorer
          image-name: explorer
  unit-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4.2.1
      - uses: actions/setup-java@v4
        with:
          distribution: ${{ ENV.JAVA_DIST }}
          java-version: ${{ ENV.JAVA_VERSION }}
      - name: 'Unit tests: hl7log-extractor'
        shell: bash
        run: cd extractor/hl7log-extractor && ./gradlew test
  deploy-and-test:
    runs-on: ubuntu-latest
    needs:
      - lint
      - build-and-upload-hl7log-extractor
      - build-and-upload-hl7-transformer
      - build-and-upload-pyspark-notebook
      - build-and-upload-explorer
      - unit-test
    permissions:
      contents: read
    env:
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml
    steps:
      - uses: actions/checkout@v4.2.1
      - name: 'Prepare inventory.yaml'
        shell: bash
        run: |
          sed -e "s/HOSTNAME/$(hostname)/" -e "s/K3S_TOKEN/$(openssl rand -hex 16)/" -e "s:WORK_DIR:$(pwd):" \
            .github/ci_resources/inventory.yaml > ansible/inventory.yaml
      - name: 'ansible-galaxy dependencies'
        shell: bash
        run: cd ansible && sudo -E /opt/pipx_bin/ansible-galaxy install -r collections/requirements.yaml
      - name: 'Install k3s'
        shell: bash
        run: |
          cd ansible && sudo -E /opt/pipx_bin/ansible-playbook -v -i inventory.yaml --diff playbooks/k3s.yaml
      - name: 'Push image to k3s - hl7log-extractor'
        uses: ./.github/actions/k3s-image-import
        with:
          subproject: extractor/hl7log-extractor
          image-name: hl7log-extractor
      - name: 'Push image to k3s - hl7-transformer'
        uses: ./.github/actions/k3s-image-import
        with:
          subproject: extractor/hl7-transformer
          image-name: hl7-transformer
      - name: 'Push image to k3s - explorer'
        uses: ./.github/actions/k3s-image-import
        with:
          subproject: explorer
          image-name: explorer
      - name: 'Install helm and helm diff'
        shell: bash
        run: cd ansible && sudo -E /opt/pipx_bin/ansible-playbook -v -i inventory.yaml --diff playbooks/helm.yaml
      - name: 'Install postgres'
        shell: bash
        run: |
          cd ansible && sudo -E /opt/pipx_bin/ansible-playbook -v -i inventory.yaml --diff playbooks/postgres.yaml
      - name: 'Install lake'
        shell: bash
        run: |
          cd ansible && sudo -E /opt/pipx_bin/ansible-playbook -v -i inventory.yaml --diff playbooks/lake.yaml
          sudo -E kubectl describe pod -l v1.min.io/tenant=minio-scout -n minio-scout
      - name: 'Install orchestrator'
        shell: bash
        run: |
          cd ansible && sudo -E /opt/pipx_bin/ansible-playbook -i inventory.yaml --diff playbooks/orchestrator.yaml
      - name: 'Install extractor'
        shell: bash
        run: |
          cd ansible && sudo -E /opt/pipx_bin/ansible-playbook -i inventory.yaml --diff playbooks/extractor.yaml
      - name: 'Run tests'
        shell: bash
        run: |
          cp .github/ci_resources/test_config_template.json tests/src/test/resources/config/local.json
          sed -i "s:WORK_DIR:$(pwd):" .github/ci_resources/tests-job.yaml
          sudo -E kubectl apply -f .github/ci_resources/tests-job.yaml
          sudo -E kubectl wait --for=condition=complete --timeout=300s job/ci-tests -n extractor &
          completion_pid=$!
          sudo -E kubectl wait --for=condition=failed --timeout=300s job/ci-tests -n extractor && exit 1 &
          failure_pid=$!
          wait -n $completion_pid $failure_pid
      - name: Test Logs
        shell: bash
        if: always()
        run: |
          sudo -E kubectl -n extractor logs job/ci-tests
      - name: Test Summary
        uses: test-summary/action@v2.4
        if: always()
        with:
          paths: 'tests/**/TEST-*.xml'
          show: 'fail, skip'
      - name: Logging (hl7log-extractor)
        shell: bash
        if: always()
        run: |
          sudo -E kubectl -n extractor logs deployment/hl7log-extractor
      - name: Logging (hl7-transformer)
        shell: bash
        if: always()
        run: |
          sudo -E kubectl -n extractor logs deployment/hl7-transformer
  publish:
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    needs: [deploy-and-test]
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@v4.2.1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ ENV.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Push Image - hl7log-extractor'
        uses: ./.github/actions/docker-push
        with:
          image-name: hl7log-extractor
      - name: 'Push Image - hl7-transformer'
        uses: ./.github/actions/docker-push
        with:
          image-name: hl7-transformer
      - name: 'Push Image - pyspark-notebook'
        uses: ./.github/actions/docker-push
        with:
          image-name: pyspark-notebook
      - name: 'Push Image - explorer'
        uses: ./.github/actions/docker-push
        with:
          image-name: explorer
