nameOverride: ''
namespaceOverride: ''
ollama:
  # -- Automatically install Ollama Helm chart from https://otwld.github.io/ollama-helm/. Use [Helm Values](https://github.com/otwld/ollama-helm/#helm-values) to configure
  enabled: true
  # -- If enabling embedded Ollama, update fullnameOverride to your desired Ollama name value, or else it will use the default ollama.name value from the Ollama chart
  fullnameOverride: open-webui-ollama
  ollama:
    # gpu:
    #   enabled: true
    #   type: 'nvidia'
    #   number: 1
    models:
      pull:
        - llama3.2:3b
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.middlewares: open-webui-open-webui-stripprefix@kubernetescrd
    hosts:
      - host: big-03.minmi-algol.ts.net
        paths:
          - path: /ollama
            pathType: Prefix
  persistentVolume:
    enabled: true
    size: 100G
    storageClass: ollama-storage
    volumeName: ollama-pv

pipelines:
  enabled: false

ingress:
  enabled: true
  class: traefik
  host: big-03.minmi-algol.ts.net

persistence:
  enabled: true
  size: 100G
  existingClaim: 'open-webui-pvc'

# -- Extra resources to deploy with Open WebUI
extraResources:
  - apiVersion: storage.k8s.io/v1
    kind: StorageClass
    metadata:
      name: open-webui-storage
    provisioner: kubernetes.io/no-provisioner
    volumeBindingMode: WaitForFirstConsumer
  - apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: open-webui-pv
    spec:
      capacity:
        storage: 100G
      volumeMode: Filesystem
      accessModes:
        - ReadWriteOnce
      persistentVolumeReclaimPolicy: Retain
      storageClassName: open-webui-storage
      hostPath:
        path: /scout/persistence/open-webui
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: open-webui-pvc
      namespace: open-webui
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100G
      storageClassName: open-webui-storage
      volumeMode: Filesystem
      volumeName: open-webui-pv
  - apiVersion: storage.k8s.io/v1
    kind: StorageClass
    metadata:
      name: ollama-storage
    provisioner: kubernetes.io/no-provisioner
    volumeBindingMode: WaitForFirstConsumer
  - apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: ollama-pv
    spec:
      capacity:
        storage: 100G
      volumeMode: Filesystem
      accessModes:
        - ReadWriteOnce
      persistentVolumeReclaimPolicy: Retain
      storageClassName: ollama-storage
      hostPath:
        path: /scout/persistence/ollama
  - apiVersion: traefik.io/v1alpha1
    kind: Middleware
    metadata:
      name: open-webui-stripprefix
      namespace: open-webui
    spec:
      stripPrefix:
        prefixes:
          - /ollama
          - /open-webui

# -- Configure database URL, needed to work with Postgres (example: `postgresql://<user>:<password>@<service>:<port>/<database>`), leave empty to use the default sqlite database
databaseUrl: 'postgresql://scout:scout123@postgresql-cluster-r.postgres:5432/openwebui'

enableOpenaiApi: false

websocket:
  # -- Enables websocket support in Open WebUI with env `ENABLE_WEBSOCKET_SUPPORT`
  enabled: true
  # -- Specifies the websocket manager to use with env `WEBSOCKET_MANAGER`: redis (default)
  manager: redis
  # -- Specifies the URL of the Redis instance for websocket communication. Template with `redis://[:<password>@]<hostname>:<port>/<db>`
  url: redis://open-webui-redis:6379/0
  # -- Node selector for websocket pods
  nodeSelector: {}
  # -- Deploys a redis
  redis:
    # -- Enable redis installation
    enabled: true
    # -- Redis name
    name: open-webui-redis
    # -- Redis image
    image:
      repository: redis
      tag: 7.4.2-alpine3.21
      pullPolicy: IfNotPresent
