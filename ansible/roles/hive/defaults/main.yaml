---
# Default values for hive-metastore deployment

# Resource configuration (dev defaults - CI friendly)
hive_resources:
  requests:
    cpu: 250m
    memory: 1Gi
  limits:
    cpu: 2
    memory: 2Gi

# Helm chart values
hive_values:
  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicaCount: 1

  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: starburstdata/hive
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: '{{ hive_image_tag }}'

  # This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []
  # This is to override the chart name.
  nameOverride: ''
  fullnameOverride: ''

  # This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ''

  # This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  # This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 9083

  ingress:
    enabled: false

  resources: '{{ hive_resources }}'

  # This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

  env:
    - name: HIVE_METASTORE_DRIVER
      value: 'org.postgresql.Driver'
    - name: HIVE_METASTORE_JDBC_URL
      value: 'jdbc:postgresql://{{ postgres_cluster_name }}-rw.{{ postgres_cluster_namespace }}:5432/hive'
    - name: HIVE_METASTORE_USER
      value: '{{ hive_postgres_user }}'
    - name: HIVE_METASTORE_PASSWORD
      value: '{{ hive_postgres_password }}'
    - name: HIVE_METASTORE_WAREHOUSE_DIR
      value: '{{ delta_lake_path }}'
    - name: S3_ENDPOINT
      value: '{{ s3_endpoint }}'
    - name: S3_ACCESS_KEY
      value: '{{ s3_lake_writer }}'
    - name: S3_SECRET_KEY
      value: '{{ s3_lake_writer_secret }}'
    - name: S3_PATH_STYLE_ACCESS
      value: 'true'
    - name: REGION
      value: '{{ s3_region }}'
    - name: HIVE_METASTORE_USERS_IN_ADMIN_ROLE
      value: 'admin'
    # All of these empty values must be present
    - name: GOOGLE_CLOUD_KEY_FILE_PATH
      value: ''
    - name: AZURE_ADL_CLIENT_ID
      value: ''
    - name: AZURE_ADL_CREDENTIAL
      value: ''
    - name: AZURE_ADL_REFRESH_URL
      value: ''
    - name: AZURE_ABFS_STORAGE_ACCOUNT
      value: ''
    - name: AZURE_ABFS_ACCESS_KEY
      value: ''
    - name: AZURE_WASB_STORAGE_ACCOUNT
      value: ''
    - name: AZURE_ABFS_OAUTH
      value: ''
    - name: AZURE_ABFS_OAUTH_TOKEN_PROVIDER
      value: ''
    - name: AZURE_ABFS_OAUTH_CLIENT_ID
      value: ''
    - name: AZURE_ABFS_OAUTH_SECRET
      value: ''
    - name: AZURE_ABFS_OAUTH_ENDPOINT
      value: ''
    - name: AZURE_WASB_ACCESS_KEY
      value: ''
