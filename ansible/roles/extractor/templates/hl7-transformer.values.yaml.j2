image:
  repository: '{{ hl7_transformer_image_repository }}'
  tag: '{{ hl7_transformer_image_tag }}'
envFrom:
  - secretRef:
      name: s3-secret
  - configMapRef:
      name: s3-env
  - secretRef:
      name: postgres-secret
env:
  - name: TEMPORAL_ADDRESS
    value: 'temporal-frontend.{{ temporal_namespace }}:7233'
  - name: TEMPORAL_NAMESPACE
    value: default
  - name: REPORT_DELTA_TABLE_NAME
    value: '{{ report_delta_table_name }}'
  - name: MODALITY_MAP_PATH
    value: '{{ modality_map_path }}'
resources:
  requests:
    cpu: '{{ hl7_transformer_cpu_request }}'
    memory: '{{ hl7_transformer_spark_memory | jvm_memory_to_k8s }}'
  limits:
    cpu: '{{ hl7_transformer_cpu_limit }}'
    memory: '{{ hl7_transformer_spark_memory | jvm_memory_to_k8s(2) }}'
volumes:
  - name: data
    hostPath:
      path: '{{ extractor_data_dir }}'
  - name: spark-defaults
    configMap:
      name: spark-defaults
volumeMounts:
  - name: data
    mountPath: /data
    readOnly: true
    mountPropagation: HostToContainer
  - name: spark-defaults
    mountPath: /opt/spark/conf/spark-defaults.conf
    subPath: spark-defaults.conf
ports:
  - containerPort: 8000
readinessProbe:
  httpGet:
    path: /healthz
    port: 8000
  initialDelaySeconds: 15
  periodSeconds: 10
livenessProbe:
  httpGet:
    path: /healthz
    port: 8000
  initialDelaySeconds: 30
  periodSeconds: 30
spark:
  executor:
    memory: '{{ hl7_transformer_spark_memory }}'
