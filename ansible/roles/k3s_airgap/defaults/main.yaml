---
# k3s_airgap Role Default Variables
# Air-gapped k3s installation configuration

# Version Configuration
# k3s version to install - if not specified or empty, will use latest stable
# Set to empty string or omit to auto-detect latest stable version
# Example: k3s_version: v1.33.5+k3s1
k3s_version: ''

# Base URLs for k3s artifacts
# Note: Full URLs are constructed at runtime after version detection
k3s_install_script_url: https://get.k3s.io
k3s_binary_base_url: https://github.com/k3s-io/k3s/releases/download

# SELinux Configuration
# Auto-detect SELinux status - will be true if SELinux is enabled on target hosts
# Can be overridden in inventory to force enable/disable SELinux package installation
k3s_selinux_enabled: "{{ ansible_selinux.status == 'enabled' if ansible_selinux is defined else false }}"

# Rancher k3s repository configuration for SELinux package downloads
# Channel to use: stable, testing, or latest
k3s_selinux_channel: stable

# Rancher RPM repository site
k3s_selinux_rpm_site: rpm.rancher.io

# Kubernetes Job configuration for SELinux package downloads
# Namespace where the downloader Job will run on the staging cluster
k3s_package_download_namespace: default

# Timeout in seconds to wait for the SELinux package download Job to complete
k3s_package_download_timeout: 300

# Download Configuration
# Timeout for artifact downloads in seconds (5 minutes default)
k3s_artifact_download_timeout: 300

# Installation Path Configuration
# Where to install k3s binary on target nodes
k3s_binary_path: /usr/local/bin/k3s

# Where to install k3s installation script on target nodes
# Uses the same path as online mode for consistency
k3s_install_script_path: /root/bin/get.k3s.io.sh

# Where to stage SELinux RPMs on target nodes (temporary directory)
k3s_selinux_rpm_staging_dir: /tmp/k3s-selinux-rpms
