---
- name: Add EBS storage class for AWS deployment
  when: aws_deployment
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        name: ebs
        annotations:
          storageclass.kubernetes.io/is-default-class: 'true'
      provisioner: ebs.csi.eks.amazonaws.com
      volumeBindingMode: WaitForFirstConsumer
      allowVolumeExpansion: true
      parameters:
        type: gp3

- name: Add storage classes
  when: not aws_deployment
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        name: '{{ item.storage_class_name }}'
      provisioner: kubernetes.io/no-provisioner
      volumeBindingMode: WaitForFirstConsumer
  loop: '{{ storage_definitions }}'

- name: Add persistent volumes
  when: not aws_deployment
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolume
      metadata:
        name: '{{ item.pv_name }}'
      spec:
        capacity:
          storage: '{{ item.size }}'
        volumeMode: Filesystem
        accessModes:
          - ReadWriteOnce
        persistentVolumeReclaimPolicy: Retain
        storageClassName: '{{ use_custom_storage_classes | ternary(item.storage_class_name, omit) }}'
        local: "{{ item.node_url is defined | ternary({'path': item.path}, omit) }}"
        nodeAffinity: >-
          {{ item.node_url is defined | ternary({
            'required': {
              'nodeSelectorTerms': [
                {'matchExpressions': [
                  {'key': 'kubernetes.io/hostname',
                   'operator': 'In',
                   'values': [item.node_url]}
                ]}
              ]
            }
          }, omit) }}
        hostPath: "{{ item.node_url is not defined | ternary({'path': item.path}, omit) }}"
  loop: '{{ storage_definitions }}'
