---
# SELinux Package Installation for k3s
# Installs container-selinux and k3s-selinux packages when SELinux is enabled
# Only runs in air-gapped mode (online mode handles SELinux via get.k3s.io script)

- name: Display SELinux installation status
  ansible.builtin.debug:
    msg: "SELinux package installation: {{ 'ENABLED' if k3s_selinux_enabled | bool else 'DISABLED' }}"

- name: Skip SELinux installation message
  ansible.builtin.debug:
    msg: 'SELinux is not enabled, skipping SELinux package installation'
  when: not k3s_selinux_enabled | bool

- name: Install and verify SELinux packages
  when: k3s_selinux_enabled | default(false) | bool
  block:
    - name: Create temporary directory for SELinux RPMs (air-gapped mode)
      ansible.builtin.tempfile:
        state: directory
        prefix: 'k3s_selinux_'
      register: k3s_selinux_temp_dir
      delegate_to: localhost
      run_once: true
      when: air_gapped | default(false) | bool

    - name: Install k3s SELinux packages
      ansible.builtin.include_role:
        name: scout_common
        tasks_from: ensure_packages
      vars:
        package_names:
          - k3s-selinux
        package_type: 'SELinux'
        download_script: |
          set -e
          set -x
          echo "Installing dnf-plugins-core for dnf download..."
          dnf install -y dnf-plugins-core
          echo "Creating Rancher k3s repository configuration..."
          cat > /etc/yum.repos.d/rancher-k3s-common.repo <<EOF
          [rancher-k3s-common-{{ k3s_selinux_channel }}]
          name=Rancher K3s Common ({{ k3s_selinux_channel }})
          baseurl=https://{{ k3s_selinux_rpm_site }}/k3s/{{ k3s_selinux_channel }}/common/centos/9/noarch
          enabled=1
          gpgcheck=1
          repo_gpgcheck=0
          gpgkey=https://{{ k3s_selinux_rpm_site }}/public.key
          EOF
          echo "Repository configuration:"
          cat /etc/yum.repos.d/rancher-k3s-common.repo
          echo "Downloading k3s-selinux package and dependencies..."
          mkdir -p /downloads
          dnf download --resolve --destdir=/downloads k3s-selinux
          echo "Downloaded packages:"
          ls -lh /downloads/
          rpm_count=$(ls /downloads/*.rpm 2>/dev/null | wc -l)
          echo "Package count: $rpm_count"
          if [ "$rpm_count" -eq 0 ]; then
            echo "ERROR: No RPM files were downloaded!"
            exit 1
          fi
          echo "Download completed successfully with $rpm_count packages"
        artifact_temp_dir: '{{ k3s_selinux_temp_dir.path }}'
        staging_dir: '{{ k3s_selinux_rpm_staging_dir }}'
        verify_command: 'semodule -l | grep -q "^k3s"'

  always:
    - name: Clean up SELinux artifact temporary directory
      ansible.builtin.file:
        path: '{{ k3s_selinux_temp_dir.path }}'
        state: absent
      delegate_to: localhost
      run_once: true
      when:
        - air_gapped | default(false) | bool
        - k3s_selinux_temp_dir is defined
        - k3s_selinux_temp_dir.path is defined
