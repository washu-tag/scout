---
# Harbor Registry Mirror Configuration
# Configures k3s to use Harbor pull-through proxy for air-gapped deployments
# Only runs when staging node is available and air_gapped=true

- name: Check if staging node is enabled
  ansible.builtin.set_fact:
    use_staging_node: "{{ 'staging' in groups and air_gapped | default(false) | bool }}"

- name: Debug log if staging node not enabled
  ansible.builtin.debug:
    msg: 'Staging node not enabled (air_gapped=false or no staging group), skipping registry mirror configuration'
  when: not use_staging_node

- name: Remove registry mirror file when not using staging node
  ansible.builtin.file:
    path: /etc/rancher/k3s/registries.yaml
    state: absent
  when: not use_staging_node
  register: registry_removal_task_result

- name: Create registry mirror file
  when: use_staging_node
  block:
    - name: Create rancher k3s config directory
      ansible.builtin.file:
        path: /etc/rancher/k3s
        state: directory
        mode: '0755'

    - name: Load Harbor role variables (default values)
      ansible.builtin.include_vars:
        file: '{{ playbook_dir}}/../roles/harbor/defaults/main.yaml'
      run_once: true

    - name: Get Harbor configuration from staging node inventory var overrides
      ansible.builtin.set_fact:
        staging_hostname: "{{ hostvars[groups['staging'][0]].external_url | default(groups['staging'][0]) }}"
        staging_harbor_expose_type: "{{ hostvars[groups['staging'][0]].harbor_expose_type | default(harbor_expose_type) }}"
        staging_harbor_nodeport: "{{ hostvars[groups['staging'][0]].harbor_nodeport_https | default(harbor_nodeport_https) }}"
      run_once: true

    - name: Compute Harbor URL components
      ansible.builtin.set_fact:
        staging_harbor_host: "{{ staging_hostname }}{% if staging_harbor_expose_type == 'nodePort' %}:{{ staging_harbor_nodeport }}{% endif %}"
      run_once: true

    - name: Build staging harbor proxies with inventory overrides
      ansible.builtin.set_fact:
        staging_harbor_proxies: []
      run_once: true

    - name: Apply inventory overrides for each proxy
      ansible.builtin.set_fact:
        staging_harbor_proxies: >-
          {{
            staging_harbor_proxies + [{
              'public_registry': item.public_registry,
              'registry_name': item.registry_name,
              'registry_type': item.registry_type,
              'registry_url': item.registry_url,
              'project_name': hostvars[groups['staging'][0]]['harbor_' + item.registry_name + '_proxy_project'] | default(item.project_name)
            }]
          }}
      loop: '{{ harbor_registry_proxies }}'
      run_once: true

    - name: Configure registry mirrors
      ansible.builtin.copy:
        dest: /etc/rancher/k3s/registries.yaml
        content: |
          mirrors:
          {% for proxy in staging_harbor_proxies %}
            {{ proxy.public_registry }}:
              endpoint:
                - "{{ staging_harbor_host }}"
              rewrite:
                "^(.*)$": "{{ proxy.project_name }}/$1"
          {% endfor %}
          configs:
            "{{ staging_harbor_host }}":
              tls:
                insecure_skip_verify: true  # Using self-signed cert
        mode: '0644'
      register: registry_config_task_result

- name: Determine if registry config changed
  ansible.builtin.set_fact:
    registry_config_changed: >-
      {{ (registry_config_task_result is defined and registry_config_task_result.changed | default(false)) or
         (registry_removal_task_result is defined and registry_removal_task_result.changed | default(false)) }}
