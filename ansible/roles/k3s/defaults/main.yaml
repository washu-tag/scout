---
# k3s Role Default Variables
# Consolidated configuration for k3s installation (online and air-gapped modes)

################################################################################
# Source Configuration
################################################################################

# Base URLs for k3s artifacts
k3s_install_script_url: https://get.k3s.io
k3s_binary_base_url: https://github.com/k3s-io/k3s/releases/download

################################################################################
# Deployment Mode Configuration
################################################################################

# Enable air-gapped installation mode
# When true: Downloads artifacts to control node, deploys without internet access
# When false: Uses online installation via get.k3s.io
air_gapped: false

# Cluster join token (required)
# All servers and agents must use the same token
k3s_token: ''

# Additional arguments to pass to k3s server (e.g., '--snapshotter=native' for container environments)
k3s_extra_args: ''

# Path to directory for container images and sandbox data
base_dir: /var/lib/rancher/k3s/storage

# Kubeconfig file path and permissions
kubeconfig_yaml: /etc/rancher/k3s/k3s.yaml
kubeconfig_group: root

# If we are deploying locally this will be overwritten with a path to a local copy of the remote kubeconfig
local_kubeconfig_yaml: '{{ kubeconfig_yaml }}'

################################################################################
# Air-Gapped Artifact Configuration
################################################################################

# Timeout for artifact downloads in seconds (5 minutes default)
k3s_artifact_download_timeout: 300

# Directory for k3s-related binaries and scripts (created if it doesn't exist)
k3s_bin_dir: /root/bin

# Where to install k3s binary on target nodes
k3s_binary_path: /usr/local/bin/k3s

# Note: k3s_install_script_path is computed dynamically as {{ k3s_bin_dir }}/get.k3s.io.sh
# Override k3s_bin_dir to change the install script path

################################################################################
# SELinux Configuration
################################################################################

# Enable SELinux package installation
# Set to true/false to force enable/disable, or leave undefined for auto-detection
# Auto-detection checks if SELinux is enabled on target hosts
# k3s_selinux_enabled: true

# Rancher k3s repository configuration for SELinux package downloads
# Channel to use: stable, testing, or latest
k3s_selinux_channel: stable

# Rancher RPM repository site
k3s_selinux_rpm_site: rpm.rancher.io

# Where to stage SELinux RPMs on target nodes (temporary directory)
k3s_selinux_rpm_staging_dir: /tmp/k3s-selinux-rpms

################################################################################
# Kubernetes Job Configuration (for SELinux package download in air-gapped mode)
################################################################################

# Namespace where the SELinux downloader Job will run on the staging cluster
k3s_package_download_namespace: default

# Timeout in seconds to wait for the SELinux package download Job to complete
k3s_package_download_timeout: 300
################################################################################
# Internal Variables (set at runtime)
################################################################################

# These variables are computed during role execution and should not be
# overridden in inventory files

# Temporary directory for storing artifacts on Ansible control node
# Set by download_artifacts.yaml task
# k3s_artifact_temp_dir: /tmp/k3s_airgap_XXXXXX

# Harbor registry configuration
# Computed from harbor role defaults and inventory variables
# use_staging_node: true/false
# staging_harbor_host: hostname:port
# staging_harbor_proxies: list of proxy configurations

# Registry configuration change tracking
# registry_config_changed: true/false
