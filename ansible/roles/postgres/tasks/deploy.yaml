---
# Kubernetes deployment tasks for PostgreSQL cluster
# These tasks run on the server host (which has access to k3s_cluster inventory variables)

- name: Initialize empty SQL statements list
  ansible.builtin.set_fact:
    postgres_init_sql: []

- name: Add SQL statements from role templates
  ansible.builtin.set_fact:
    postgres_init_sql: '{{ postgres_init_sql + lookup("template", item) | from_yaml }}'
  when: module_enabled not in vars or vars[module_enabled] | bool
  vars:
    module_name: "{{ item | basename | regex_replace('_init_sql\\.yaml$', '') }}"
    module_enabled: "{{ module_name + '_enabled' }}"
  loop: "{{ lookup('fileglob', role_path ~ '/templates/postgres_init/*_init_sql.yaml', wantlist=True) }}"
  loop_control:
    label: '{{ item | basename }}'
  delegate_to: localhost
  run_once: true

- name: Deploy Postgres Operator
  ansible.builtin.include_role:
    name: scout_common
    tasks_from: deploy_helm_chart
  vars:
    helm_chart_name: cnpg
    helm_chart_ref: cnpg/cloudnative-pg
    helm_chart_version: '{{ cnpg_version }}'
    helm_chart_namespace: '{{ cnpg_operator_namespace }}'
    helm_repo_name: cnpg
    helm_repo_url: https://raw.githubusercontent.com/cloudnative-pg/charts/refs/heads/gh-pages/
    helm_chart_timeout: "{{ minio_operator_wait_timeout | default('1m') }}"

- name: Create namespace
  ansible.builtin.include_role:
    name: scout_common
    tasks_from: namespace
  vars:
    ns: '{{ postgres_cluster_namespace }}'

- name: Set up storage
  ansible.builtin.include_role:
    name: scout_common
    tasks_from: storage_setup
  vars:
    storage_definitions: '{{ postgres_storage_definitions }}'

- name: Create Postgres user secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: postgres-user
        namespace: '{{ postgres_cluster_namespace }}'
      type: kubernetes.io/basic-auth
      stringData:
        username: '{{ postgres_user }}'
        password: '{{ postgres_password }}'

- name: Create Postgres superuser secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: superuser-secret
        namespace: '{{ postgres_cluster_namespace }}'
      type: kubernetes.io/basic-auth
      stringData:
        username: 'postgres'
        password: '{{ postgres_superuser_password }}'

- name: Create Postgres cluster
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: postgresql.cnpg.io/v1
      kind: Cluster
      metadata:
        name: postgresql-cluster
        namespace: '{{ postgres_cluster_namespace }}'
      spec:
        instances: 1
        storage:
          storageClass: '{{ postgres_storage_class }}'
          size: 100Mi
        resources: '{{ postgres_resources }}'
        enableSuperuserAccess: true
        superuserSecret:
          name: superuser-secret
        postgresql:
          parameters: '{{ postgres_parameters }}'
        bootstrap:
          initdb:
            database: '{{ ingest_postgres_table_name }}'
            owner: '{{ postgres_user }}'
            secret:
              name: postgres-user
            postInitSQL: '{{ postgres_init_sql }}'

- name: Expose metrics service for Prometheus
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: postgresql-cluster-metrics
        namespace: '{{ postgres_cluster_namespace }}'
      spec:
        selector:
          cnpg.io/cluster: postgresql-cluster
        ports:
          - name: metrics
            port: 9187
            targetPort: metrics

- name: Wait for Postgres to be ready
  ansible.builtin.command: 'kubectl -n {{ postgres_cluster_namespace }} wait --for=condition=Ready --timeout=300s cluster/postgresql-cluster'
  register: postgres_ready
  changed_when: false
