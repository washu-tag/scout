---
# Render Helm chart on localhost and apply to remote cluster
# This task file is included when use_staging_node: true

- name: 'Ensure Helm is installed on localhost'
  delegate_to: localhost
  ansible.builtin.command: helm version --short
  register: helm_version_check
  failed_when: false
  changed_when: false

- name: 'Fail if Helm not available on localhost'
  delegate_to: localhost
  ansible.builtin.fail:
    msg: >-
      Helm must be installed on the Ansible control node (localhost)
      for air-gapped deployments
  when: helm_version_check.rc != 0

- name: 'Add Helm repository on localhost'
  delegate_to: localhost
  ansible.builtin.command:
    cmd: 'helm repo add {{ helm_repo_name }} {{ helm_repo_url }}'
  register: helm_repo_add_result
  failed_when: false
  changed_when: "'has been added' in helm_repo_add_result.stdout"
  when:
    - helm_repo_name is defined
    - helm_repo_url is defined
    - helm_repo_name is not none
    - helm_repo_url is not none
    - helm_repo_name | length > 0
    - helm_repo_url | length > 0

- name: 'Update Helm repositories on localhost'
  delegate_to: localhost
  ansible.builtin.command:
    cmd: 'helm repo update'
  when:
    - helm_repo_name is defined
    - helm_repo_url is defined
    - helm_repo_name is not none
    - helm_repo_url is not none
    - helm_repo_name | length > 0
    - helm_repo_url | length > 0
  changed_when: false

- name: 'Create temporary directory for rendered manifests'
  delegate_to: localhost
  ansible.builtin.tempfile:
    state: directory
    prefix: 'helm_{{ helm_chart_name }}_'
  register: helm_render_dir

- name: 'Write inline values to temporary file (if provided)'
  delegate_to: localhost
  ansible.builtin.copy:
    content: '{{ helm_chart_values | to_nice_yaml }}'
    dest: '{{ helm_render_dir.path }}/inline-values.yaml'
    mode: '0644'
  when:
    - helm_chart_values is defined
    - helm_chart_values | length > 0
  register: inline_values_file

- name: 'Build values files list'
  delegate_to: localhost
  ansible.builtin.set_fact:
    all_values_files: >-
      {{ (helm_chart_values_files | default([])) +
      ([inline_values_file.dest] if inline_values_file is not skipped
      else []) }}

- name: 'Build helm template command'
  delegate_to: localhost
  ansible.builtin.set_fact:
    helm_template_cmd: >-
      helm template {{ helm_chart_name }}
      {{ helm_chart_ref }}
      {% if helm_chart_version is defined and
      helm_chart_version is not none and
      helm_chart_version | length > 0 %}
      --version {{ helm_chart_version }}{% endif %}
      --namespace {{ helm_chart_namespace }}
      {% if helm_chart_create_namespace | default(false) %}
      --create-namespace{% endif %}
      {% for values_file in all_values_files %}
      --values {{ values_file }} {% endfor %}
      {% if helm_chart_api_versions is defined and
      helm_chart_api_versions is not none and
      helm_chart_api_versions | length > 0 %}
      {% for api_version in helm_chart_api_versions %}
      --api-versions {{ api_version }} {% endfor %}{% endif %}
      --output-dir {{ helm_render_dir.path }}

- name: 'Render Helm chart on localhost'
  delegate_to: localhost
  ansible.builtin.command:
    cmd: '{{ helm_template_cmd }}'
  register: helm_template_result
  changed_when: true
  failed_when: false # Handle errors in next task with better messaging

- name: 'Check for API version requirements in template errors'
  delegate_to: localhost
  when: helm_template_result.rc != 0
  block:
    - name: 'Analyze helm template error for missing API versions'
      ansible.builtin.set_fact:
        missing_api_hint: |-
          {% if 'cert-manager' in helm_template_result.stderr %}
          HINT: This chart requires cert-manager API versions.
          Add this to your helm_chart_api_versions:
            helm_chart_api_versions:
              - cert-manager.io/v1

          {% elif 'ServiceMonitor' in helm_template_result.stderr or 'monitoring.coreos.com' in helm_template_result.stderr %}
          HINT: This chart requires Prometheus Operator API versions.
          Add this to your helm_chart_api_versions:
            helm_chart_api_versions:
              - monitoring.coreos.com/v1

          {% elif 'Capabilities.APIVersions' in helm_template_result.stderr %}
          HINT: This chart checks for API version availability during rendering.
          Try inspecting the chart to find required API versions:
            1. helm show all {{ helm_chart_ref }} | grep Capabilities.APIVersions
            2. Check chart documentation for CRD dependencies
            3. See: ansible/roles/helm_renderer/defaults/main.yaml for guidance

          {% else %}
          For air-gapped deployments, some charts require API versions to be specified.
          See: ansible/roles/helm_renderer/defaults/main.yaml for detailed guidance
          Common APIs: cert-manager.io/v1, monitoring.coreos.com/v1
          {% endif %}

          How to find required API versions:
          ----------------------------------
          1. Try: helm template {{ helm_chart_name }} {{ helm_chart_ref }} --api-versions cert-manager.io/v1
          2. Inspect: helm show all {{ helm_chart_ref }} | grep -A 2 Capabilities.APIVersions
          3. Check: Chart README or values.yaml for dependency requirements

          Current helm_chart_api_versions: {{ helm_chart_api_versions | default([]) }}

    - name: 'Fail with enhanced error message'
      ansible.builtin.fail:
        msg: |
          ========================================================================
          HELM TEMPLATE RENDERING FAILED
          ========================================================================

          Chart: {{ helm_chart_name }}
          Reference: {{ helm_chart_ref }}
          Version: {{ helm_chart_version | default('latest') }}
          Namespace: {{ helm_chart_namespace }}

          Error from Helm:
          {{ helm_template_result.stderr }}

          {{ missing_api_hint }}

          Documentation:
          - Role defaults: ansible/roles/helm_renderer/defaults/main.yaml
          - README: ansible/roles/helm_renderer/README.md (search for "API Versions")
          ========================================================================

- name: 'Apply rendered manifests to cluster'
  ansible.builtin.include_tasks: apply_manifests.yaml
  vars:
    manifests_dir: '{{ helm_render_dir.path }}'
  when: not (helm_chart_skip_apply | default(false) | bool)

- name: 'Clean up temporary directory'
  delegate_to: localhost
  ansible.builtin.file:
    path: '{{ helm_render_dir.path }}'
    state: absent
  when: not (helm_chart_skip_cleanup | default(false) | bool)
