---
# Verify Harbor deployment
# Tests that Harbor is fully functional with existing k8s cluster

- name: Verify Harbor deployment
  hosts: all
  gather_facts: false
  tasks:
    - name: Check Harbor namespace with kubectl
      ansible.builtin.command:
        cmd: kubectl get namespace {{ harbor_namespace }}
      register: namespace_check
      changed_when: false
      failed_when: namespace_check.rc != 0

    - name: Verify Harbor namespace exists
      kubernetes.core.k8s_info:
        kind: Namespace
        name: '{{ harbor_namespace }}'
      register: harbor_ns

    - name: Debug namespace info
      ansible.builtin.debug:
        var: harbor_ns

    - name: Assert namespace exists
      ansible.builtin.assert:
        that:
          - harbor_ns.resources | length > 0
        fail_msg: 'Harbor namespace not found'
        success_msg: '✓ Harbor namespace exists'

    - name: Verify Harbor pods are running
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: '{{ harbor_namespace }}'
        label_selectors:
          - app=harbor
      register: harbor_pods
      failed_when: >
        harbor_pods.resources | length == 0 or
        harbor_pods.resources | selectattr('status.phase', 'ne', 'Running') | list | length > 0

    - name: Display Harbor pod count
      ansible.builtin.debug:
        msg: 'Harbor has {{ harbor_pods.resources | length }} pods running'

    - name: Verify Harbor service exists
      kubernetes.core.k8s_info:
        kind: Service
        namespace: '{{ harbor_namespace }}'
        name: harbor
      register: harbor_svc
      failed_when: harbor_svc.resources | length == 0

    - name: Verify Harbor API is accessible
      ansible.builtin.uri:
        url: 'https://{{ external_url }}:{{ harbor_nodeport_https }}/api/v2.0/systeminfo'
        validate_certs: false
        status_code: 200
      register: harbor_api_check
      retries: 30
      delay: 10
      until: harbor_api_check.status == 200

    - name: Display Harbor system info
      ansible.builtin.debug:
        msg: 'Harbor version: {{ harbor_api_check.json.harbor_version }}'

    - name: Verify Docker Hub registry endpoint exists
      ansible.builtin.uri:
        url: 'https://{{ external_url }}:{{ harbor_nodeport_https }}/api/v2.0/registries'
        validate_certs: false
        user: admin
        password: '{{ harbor_admin_password }}'
        force_basic_auth: true
      register: registries
      failed_when: >
        registries.json | selectattr('name', 'equalto', 'dockerhub') | list | length == 0

    - name: Verify GHCR registry endpoint exists
      ansible.builtin.uri:
        url: 'https://{{ external_url }}:{{ harbor_nodeport_https }}/api/v2.0/registries'
        validate_certs: false
        user: admin
        password: '{{ harbor_admin_password }}'
        force_basic_auth: true
      register: registries_ghcr
      failed_when: >
        registries_ghcr.json | selectattr('name', 'equalto', 'ghcr') | list | length == 0

    - name: Verify Docker Hub proxy project exists
      ansible.builtin.uri:
        url: 'https://{{ external_url }}:{{ harbor_nodeport_https }}/api/v2.0/projects'
        validate_certs: false
        user: admin
        password: '{{ harbor_admin_password }}'
        force_basic_auth: true
      register: projects
      failed_when: >
        projects.json | selectattr('name', 'equalto', 'dockerhub-proxy') | list | length == 0

    - name: Verify GHCR proxy project exists
      ansible.builtin.uri:
        url: 'https://{{ external_url }}:{{ harbor_nodeport_https }}/api/v2.0/projects'
        validate_certs: false
        user: admin
        password: '{{ harbor_admin_password }}'
        force_basic_auth: true
      register: projects_ghcr
      failed_when: >
        projects_ghcr.json | selectattr('name', 'equalto', 'ghcr-proxy') | list | length == 0

    - name: Display verification summary
      ansible.builtin.debug:
        msg:
          - '✓ Harbor namespace exists'
          - '✓ {{ harbor_pods.resources | length }} Harbor pods running'
          - '✓ Harbor service exposed on port {{ harbor_nodeport_https }}'
          - '✓ Harbor API accessible'
          - '✓ Docker Hub registry endpoint configured'
          - '✓ GHCR registry endpoint configured'
          - '✓ Docker Hub proxy project created'
          - '✓ GHCR proxy project created'
          - 'Harbor is fully functional!'
