---
- name: Install JupyterHub
  hosts: server
  gather_facts: false
  environment:
    HELM_PLUGINS: '{{ helm_plugins_dir }}'
    KUBECONFIG: '{{ kubeconfig_yaml }}'
  tasks:
    - name: Setup storage
      include_tasks: tasks/storage_setup.yaml
      vars:
        storage_definitions:
          - name: jupyter-hub
            size: '15Gi'
            path: '{{ jupyter_dir }}/hub'
          - name: jupyter-singleuser
            size: '250Gi'
            path: '{{ jupyter_dir }}/singleuser'

    - name: Create Jupyter namespace
      kubernetes.core.k8s:
        name: jupyter
        api_version: v1
        kind: Namespace
        state: present

    - name: Create PersistentVolumeClaim for Jupyter single-user storage
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: jupyter-singleuser-pvc
            namespace: jupyter
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 250Gi
            storageClassName: jupyter-singleuser-storage

    - name: Add JupyterHub Helm repository
      kubernetes.core.helm_repository:
        name: jupyterhub
        repo_url: https://raw.githubusercontent.com/jupyterhub/helm-chart/refs/heads/gh-pages/

    - name: Setup Spark Defaults ConfigMaps
      include_tasks: tasks/spark_config_setup.yaml
      vars:
        spark_defaults_configmap_name: spark-defaults
        spark_defaults_configmap_namespace: jupyter
        spark_memory: '{{ jupyter_spark_memory }}'

    - name: Load values file
      ansible.builtin.include_vars:
        file: vars/jupyter.values.yaml
        name: jupyter_values

    - name: Install JupyterHub using Helm
      kubernetes.core.helm:
        state: present
        name: jupyter
        chart_ref: jupyterhub/jupyterhub
        release_namespace: jupyter
        create_namespace: true
        update_repo_cache: true
        chart_version: ~4.2.0
        wait: true
        wait_timeout: 10m
        atomic: true
        values: '{{ jupyter_values }}'
