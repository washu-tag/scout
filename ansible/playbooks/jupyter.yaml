---
- name: Install JupyterHub
  hosts: server
  gather_facts: false
  vars:
    s3_endpoint: 'http://minio.{{ minio_tenant_namespace }}'
  environment:
    HELM_PLUGINS: '{{ helm_plugins_dir }}'
    KUBECONFIG: '{{ kubeconfig_yaml }}'
  tasks:
    - name: Setup storage
      include_tasks: tasks/storage_setup.yaml
      vars:
        storage_definitions:
          - name: jupyter-hub
            size: '15Gi'
            path: '{{ jupyter_dir }}/hub'
          - name: jupyter-singleuser
            size: '250Gi'
            path: '{{ jupyter_dir }}/singleuser'

    - name: Create Jupyter namespace
      kubernetes.core.k8s:
        name: jupyter
        api_version: v1
        kind: Namespace
        state: present

    - name: Create PersistentVolumeClaim for Jupyter single-user storage
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: jupyter-singleuser-pvc
            namespace: jupyter
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 250Gi
            storageClassName: jupyter-singleuser-storage

    - name: Add JupyterHub Helm repository
      kubernetes.core.helm_repository:
        name: jupyterhub
        repo_url: https://raw.githubusercontent.com/jupyterhub/helm-chart/refs/heads/gh-pages/

    - name: Setup Spark Defaults ConfigMaps
      include_tasks: tasks/spark_config_setup.yaml
      vars:
        spark_defaults_configmap_name: spark-defaults
        spark_defaults_configmap_namespace: jupyter
        s3a_access_key: '{{ s3_username }}'
        s3a_secret_key: '{{ s3_password }}'
        s3a_endpoint: '{{ s3_endpoint }}'
        s3a_region: '{{ s3_region }}'
        executor_memory: '{{ jupyter_spark_memory }}'
        driver_memory: '{{ jupyter_spark_memory }}'

    - name: Install JupyterHub using Helm
      kubernetes.core.helm:
        state: present
        name: jupyter
        chart_ref: jupyterhub/jupyterhub
        release_namespace: jupyter
        create_namespace: true
        update_repo_cache: true
        chart_version: ^4.0.0
        wait: true
        wait_timeout: 10m
        atomic: true
        values_files:
          - '{{ scout_repo_dir }}/helm/jupyter/hub/hub-values.yaml'
          - '{{ scout_repo_dir }}/helm/jupyter/hub/auth-values.yaml'
        values:
          ingress:
            enabled: true
            ingressClassName: traefik
            hosts:
              - '{{ server_hostname }}'
          hub:
            services:
              prometheus:
                api_token: '{{ jupyter_metrics_api_token }}'
            config:
              GitHubOAuthenticator:
                client_id: '{{ github_client_id }}'
                client_secret: '{{ github_client_secret }}'
                oauth_callback_url: 'https://{{ server_hostname }}/jupyter/hub/oauth_callback'
                allowed_organizations:
                  - '{{ github_organization }}'
                scope:
                  - read:org
              JupyterHub:
                authenticator_class: github
          singleuser:
            storage:
              extraVolumes:
                - name: spark-defaults
                  configMap:
                    name: spark-defaults
              extraVolumeMounts:
                - name: spark-defaults
                  mountPath: /usr/local/spark/conf/spark-defaults.conf
                  subPath: spark-defaults.conf
