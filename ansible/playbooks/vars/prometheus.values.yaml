alertmanager:
  enabled: false
kube-state-metrics:
  enabled: true
prometheus-node-exporter:
  enabled: true
  hostNetwork: false
prometheus-pushgateway:
  enabled: false

server:
  extraFlags:
    - web.enable-otlp-receiver
    - web.enable-lifecycle
  service:
    servicePort: 9090
  persistentVolume:
    enabled: true
    storageClass: prometheus-storage
  retention: 15d
  extraSecretMounts:
    - name: jupyterhub-metrics-api-token
      secretName: jupyterhub-metrics-api-token
      mountPath: /etc/secrets/jupyterhub
      readOnly: true

extraScrapeConfigs: |
  - job_name: 'grafana'
    metrics_path: /grafana/metrics
    static_configs:
      - targets: ['grafana.{{ grafana_namespace }}.svc.cluster.local']

  - job_name: 'jaeger-agent'
    metrics_path: /metrics
    static_configs:
      - targets: ['jaeger-agent.jaeger.svc.cluster.local:14271']

  - job_name: 'jaeger-collector'
    metrics_path: /metrics
    static_configs:
      - targets: ['jaeger-collector.jaeger.svc.cluster.local:14269']

  - job_name: 'jaeger-query'
    metrics_path: /metrics
    static_configs:
      - targets: ['jaeger-query.jaeger.svc.cluster.local:16687']

  - job_name: 'loki'
    metrics_path: /metrics
    static_configs:
      - targets: ['loki.{{ loki_namespace }}.svc.cluster.local:3100']

  - job_name: minio-cluster
    metrics_path: /minio/v2/metrics/cluster
    scheme: http
    static_configs:
      - targets: ['minio.{{ minio_tenant_namespace }}.svc.cluster.local']

  - job_name: minio-bucket
    metrics_path: /minio/v2/metrics/bucket
    scheme: http
    static_configs:
      - targets: ['minio.{{ minio_tenant_namespace }}.svc.cluster.local']

  - job_name: minio-node
    metrics_path: /minio/v2/metrics/node
    scheme: http
    static_configs:
      - targets: ['minio.{{ minio_tenant_namespace }}.svc.cluster.local']

  - job_name: minio-resource
    metrics_path: /minio/v2/metrics/resource
    scheme: http
    static_configs:
      - targets: ['minio.{{ minio_tenant_namespace }}.svc.cluster.local']

  - job_name: jupyterhub
    metrics_path: /jupyter/hub/metrics
    bearer_token_file: /etc/secrets/jupyterhub/metrics-api-token
    scheme: http
    static_configs:
      - targets: ['proxy-public.jupyter.svc.cluster.local']

  - job_name: trino-metrics-worker
    scrape_interval: 10s
    scrape_timeout: 10s
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_trino_scrape]
      action: keep # scrape only pods with the trino scrape anotation
      regex: true
    - source_labels: [__meta_kubernetes_pod_container_name]
      action: keep # dont try to scrape non trino container
      regex: trino-worker
    - action: hashmod
      modulus: $(SHARDS)
      source_labels:
      - __address__
      target_label: __tmp_hash
    - action: keep
      regex: $(SHARD)
      source_labels:
      - __tmp_hash
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: pod
    - source_labels: [__meta_kubernetes_pod_container_name]
      action: replace
      target_label: container
    metric_relabel_configs:
        - source_labels: [__name__]
          regex: ".+_FifteenMinute.+|.+_FiveMinute.+|.+IterativeOptimizer.+|.*io_airlift_http_client_type_HttpClient.+"
          action: drop # droping some highly granular metrics 
        - source_labels: [__meta_kubernetes_pod_name]
          regex: ".+"
          target_label: pod
          action: replace 
        - source_labels: [__meta_kubernetes_pod_container_name]
          regex: ".+"
          target_label: container
          action: replace 
    scheme: http
    tls_config:
      insecure_skip_verify: true
    basic_auth:
      username: trino-user # Any random username will work with unsecured endpoint, no password needed

  - job_name: trino-metrics-coordinator
    scrape_interval: 10s
    scrape_timeout: 10s
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_trino_scrape]
      action: keep # scrape only pods with the trino scrape anotation
      regex: true
    - source_labels: [__meta_kubernetes_pod_container_name]
      action: keep # dont try to scrape non trino container
      regex: trino-coordinator
    - action: hashmod
      modulus: $(SHARDS)
      source_labels:
      - __address__
      target_label: __tmp_hash
    - action: keep
      regex: $(SHARD)
      source_labels:
      - __tmp_hash
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: pod
    - source_labels: [__meta_kubernetes_pod_container_name]
      action: replace
      target_label: container
    metric_relabel_configs:
        - source_labels: [__name__]
          regex: ".+_FifteenMinute.+|.+_FiveMinute.+|.+IterativeOptimizer.+|.*io_airlift_http_client_type_HttpClient.+"
          action: drop # droping some highly granular metrics 
        - source_labels: [__meta_kubernetes_pod_name]
          regex: ".+"
          target_label: pod
          action: replace 
        - source_labels: [__meta_kubernetes_pod_container_name]
          regex: ".+"
          target_label: container
          action: replace 
    scheme: https
    tls_config:
      insecure_skip_verify: true
    basic_auth:
      username: trino-user # Any random username will work with unsecured endpoint, no password needed
