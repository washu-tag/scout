---
- name: Create storage directories for Open WebUI and Ollama
  hosts: k3s_cluster
  gather_facts: false
  vars_files:
    - vars/open_webui_storage.yaml
  tasks:
    - name: Create storage directories
      include_tasks: tasks/storage_dir_create.yaml

- name: Install Open WebUI
  hosts: server
  gather_facts: false
  environment:
    HELM_PLUGINS: '{{ helm_plugins_dir }}'
    KUBECONFIG: '{{ kubeconfig_yaml }}'
  vars_files:
    - vars/open_webui_storage.yaml
  vars:
    helm_repo_name: open-webui
    helm_repo_url: https://helm.openwebui.com/
    helm_chart_name: open-webui
    helm_release_name: open-webui
    ollama_strip_prefix_middleware: ollama-strip-prefix
    ollama_path: /ollama-service

  tasks:
    - name: Set up storage
      include_tasks: tasks/storage_setup.yaml

    - name: Create Open WebUI namespace
      kubernetes.core.k8s:
        name: '{{ open_webui_namespace }}'
        kind: Namespace
        state: present

    - name: Add Open WebUI Helm repository
      kubernetes.core.helm_repository:
        name: '{{ helm_repo_name }}'
        repo_url: '{{ helm_repo_url }}'

    - name: Setup PostgreSQL database and user
      block:
        - name: Create user (ignore if exists)
          kubernetes.core.k8s_exec:
            namespace: '{{ postgres_cluster_namespace }}'
            pod: '{{ postgres_cluster_name }}-1'
            command: |
              psql --dbname=postgres -c "CREATE USER {{ open_webui_postgres_user }} WITH PASSWORD '{{ open_webui_postgres_password }}';"
          register: user_result
          failed_when:
            - user_result.rc != 0
            - '"already exists" not in user_result.stderr'

        - name: Create database (ignore if exists)
          kubernetes.core.k8s_exec:
            namespace: '{{ postgres_cluster_namespace }}'
            pod: '{{ postgres_cluster_name }}-1'
            command: |
              psql --dbname=postgres -c "CREATE DATABASE {{ open_webui_database }} OWNER {{ open_webui_postgres_user }};"
          register: db_result
          failed_when:
            - db_result.rc != 0
            - '"already exists" not in db_result.stderr'

        - name: Grant schema ownership to user
          kubernetes.core.k8s_exec:
            namespace: '{{ postgres_cluster_namespace }}'
            pod: '{{ postgres_cluster_name }}-1'
            command: |
              psql --dbname={{ open_webui_database }} -c "ALTER SCHEMA public OWNER TO {{ open_webui_postgres_user }};"
          register: schema_privileges_result
          failed_when:
            - schema_privileges_result.rc != 0

    - name: Create Traefik Middleware to strip prefix
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: traefik.io/v1alpha1
          kind: Middleware
          metadata:
            name: '{{ ollama_strip_prefix_middleware }}'
            namespace: kube-system
          spec:
            stripPrefix:
              prefixes:
                - '{{ ollama_path }}'

    - name: Deploy Open WebUI using Helm
      kubernetes.core.helm:
        state: present
        name: '{{ helm_release_name }}'
        chart_ref: '{{ helm_repo_name }}/{{ helm_chart_name }}'
        release_namespace: '{{ open_webui_namespace }}'
        update_repo_cache: true
        chart_version: ~8.6.0
        wait: true
        wait_timeout: 15m
        atomic: true
        values: "{{ lookup('template', 'templates/open-webui/values.yaml.j2') | from_yaml }}"
        # TODO: set prompt and "advanced params" function calling = Native, max_tokens=50,000 for GPT-OSS:120b model
        # (currently done manually in UI Admin Panel > Models [select model])
        # TODO add tools