- name: Add Minio Helm repository
  kubernetes.core.helm_repository:
    name: minio-operator
    repo_url: https://operator.min.io

- name: Install/Upgrade Minio Operator
  kubernetes.core.helm:
    name: minio-operator
    chart_ref: minio-operator/operator
    chart_version: ~7.1.0
    release_namespace: minio-operator
    create_namespace: true
    release_state: present
    update_repo_cache: true
    wait: true
    wait_timeout: 1m
    atomic: true

- name: Create namespace
  kubernetes.core.k8s:
    name: '{{ minio_tenant_namespace }}'
    api_version: v1
    kind: Namespace
    state: present

- name: Create Traefik Middleware to add trailing slash that Minio needs
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: traefik.io/v1alpha1
      kind: Middleware
      metadata:
        name: minio-add-trailing-slash
        namespace: kube-system
      spec:
        redirectRegex:
          regex: (.*/minio$)
          replacement: ${1}/
          permanent: true

- name: Create Traefik Middleware to strip /minio prefix for internal traffic
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: traefik.io/v1alpha1
      kind: Middleware
      metadata:
        name: minio-strip-prefix
        namespace: kube-system
      spec:
        stripPrefix:
          prefixes:
            - /minio

- name: Setup storage
  include_tasks: tasks/storage_setup.yaml
  vars:
    storage_definitions:
      - name: minio
        size: '750Gi'
        path: '{{ minio_dir }}'

- name: Set up env secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: minio-scout-env-configuration
        namespace: '{{ minio_tenant_namespace }}'
      type: Opaque
      stringData:
        config.env: |
          export MINIO_ROOT_USER={{ s3_username }}
          export MINIO_ROOT_PASSWORD={{ s3_password }}
          export MINIO_REGION_NAME={{ s3_region }}
          export MINIO_REGION={{ s3_region }}

- name: Create MinIO IAM policies
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: minio.min.io/v2
      kind: Policy
      metadata:
        name: "policy-{{ item.name }}"
        namespace: '{{ minio_tenant_namespace }}'
      spec:
        name: "{{ item.name }}"
        definition: |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": {{ item.actions | to_json }},
                "Resource": {{ item.resources | to_json }}
              }
            ]
          }
  loop:
    - name: lake-r
      actions:
        - s3:GetObject
        - s3:ListBucket
      resources:
        - arn:aws:s3:::lake/*
        - arn:aws:s3:::lake
    - name: lake-rw
      actions:
        - s3:GetObject
        - s3:ListBucket
        - s3:PutObject
        - s3:DeleteObject
      resources:
        - arn:aws:s3:::lake/*
        - arn:aws:s3:::lake
        - arn:aws:s3:::scratch/*
        - arn:aws:s3:::scratch
    - name: loki-rw
      actions:
        - s3:GetObject
        - s3:ListBucket
        - s3:PutObject
        - s3:DeleteObject
      resources:
        - arn:aws:s3:::loki-chunks/*
        - arn:aws:s3:::loki-chunks
        - arn:aws:s3:::loki-ruler/*
        - arn:aws:s3:::loki-ruler
        - arn:aws:s3:::loki-admin/*
        - arn:aws:s3:::loki-admin

- name: Bind policies to users
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: minio.min.io/v2
      kind: PolicyBinding
      metadata:
        name: "binding-{{ item.name }}"
        namespace: '{{ minio_tenant_namespace }}'
      spec:
        policyName: "{{ item.policy_name }}"
        userRef:
          name: "{{ item.name }}"
        tenant: minio-scout
  loop:
    - name: lake-reader
      policy_name: lake-r
    - name: lake-writer
      policy_name: lake-rw
    - name: loki-writer
      policy_name: loki-rw

- name: Create service account secrets for MinIO users
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ item.name }}-creds"
        namespace: '{{ minio_tenant_namespace }}'
      type: Opaque
      stringData:
        CONSOLE_ACCESS_KEY: "{{ item.access_key }}"
        CONSOLE_SECRET_KEY: "{{ item.secret_key }}"
  loop:
    - name: lake-reader
      access_key: "lake-reader"
      secret_key: "{{ lake_reader_secret }}"
    - name: lake-writer
      access_key: "lake-writer"
      secret_key: "{{ lake_writer_secret }}"
    - name: loki-writer
      access_key: "loki-writer"
      secret_key: "{{ loki_writer_secret }}"

- name: Install/Upgrade Minio Tenant
  kubernetes.core.helm:
    name: '{{ minio_tenant_namespace }}'
    chart_ref: minio-operator/tenant
    chart_version: ~7.1.0
    release_namespace: '{{ minio_tenant_namespace }}'
    release_state: present
    update_repo_cache: true
    wait: true
    wait_timeout: 5m
    atomic: true
    values:
      tenant:
        name: minio-scout
        configSecret:
          name: minio-scout-env-configuration
          existingSecret: true
        env:
          - name: MINIO_BROWSER_REDIRECT_URL
            value: 'https://{{ server_hostname }}/minio/'
          - name: MINIO_PROMETHEUS_AUTH_TYPE
            value: public
        pools:
          - servers: 1
            name: pool-0
            volumesPerServer: 1
            size: 750Gi
            storageClassName: minio-storage
        metrics:
          enabled: true
          port: 9000
          protocol: http
        certificate:
          requestAutoCert: false
        buckets:
          - name: loki-chunks
          - name: loki-ruler
          - name: loki-admin
          - name: lake
          - name: scratch
        users:
          - lake-reader-creds
          - lake-writer-creds
          - loki-writer-creds
      ingress:
        console:
          enabled: true
          ingressClassName: traefik
          host: '{{ server_hostname }}'
          path: /minio
          pathType: Prefix
          annotations:
            traefik.ingress.kubernetes.io/router.middlewares: >
              kube-system-minio-add-trailing-slash@kubernetescrd,
              kube-system-minio-strip-prefix@kubernetescrd
