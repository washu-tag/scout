- name: Add OAuth2 Proxy Helm repository
  kubernetes.core.helm_repository:
    name: oauth2-proxy
    repo_url: https://oauth2-proxy.github.io/manifests

- name: Create ConfigMap with OAuth2 Proxy html templates
  block:
    - name: Find all html files in oauth2-proxy templates directory
      find:
        paths: 'files/oauth2-proxy'
        patterns: '*.html'
      register: oauth2_proxy_templates

    - name: Create ConfigMap for OAuth2 Proxy templates
      kubernetes.core.k8s:
        state: present
        definition: |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: oauth2-proxy-templates
            namespace: kube-system
          data:
            '{{ item.path | basename }}': |-
              {{ lookup("file", item.path) | indent(4) }}
      loop: '{{ oauth2_proxy_templates.files }}'
      loop_control:
        label: '{{ item.path | basename }}'

- name: Create Secret with Logo for OAuth2 Proxy
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: oauth2-proxy-logo
        namespace: kube-system
      type: Opaque
      data:
        logo.png: '{{ lookup("file", "files/oauth2-proxy/scout.jpg") | b64encode }}'

- name: Install OAuth2 Proxy with helm
  kubernetes.core.helm:
    name: oauth2-proxy
    chart_ref: oauth2-proxy/oauth2-proxy
    chart_version: ~7.12.0
    release_namespace: kube-system
    release_state: present
    wait: false
    wait_timeout: 3m
    atomic: true
    values:
      config:
        clientID: '{{ keycloak_oauth2_proxy_client_id }}'
        clientSecret: '{{ keycloak_oauth2_proxy_client_secret }}'
        cookieSecret: '{{ oauth2_proxy_cookie_secret }}'
        configFile: |
          provider = "keycloak-oidc"
          redirect_url = "https://{{ server_hostname }}/oauth2/callback"
          oidc_issuer_url = "https://{{ server_hostname }}/kc/realms/scout"
          allowed_roles = "scout-user"
          skip_provider_button = false
          email_domains=  ['*']
          reverse_proxy = true
          real_client_ip_header =  "X-Forwarded-For"
          upstreams = [ "https://{{ server_hostname }}" ]
          custom_templates_dir = "/etc/oauth2-proxy/templates"
          custom_sign_in_logo = "/var/www/static/logo/logo.png"
      ingress:
        enabled: true
        className: traefik
        path: /oauth2
        hosts:
          - '{{ server_hostname }}'
      extraVolumes:
        - name: oauth2-proxy-templates
          configMap:
            name: oauth2-proxy-templates
        - name: oauth2-proxy-logo
          secret:
            secretName: oauth2-proxy-logo
      extraVolumeMounts:
        - name: oauth2-proxy-templates
          mountPath: /etc/oauth2-proxy/templates
        - name: oauth2-proxy-logo
          mountPath: /var/www/static/logo

- name: Wait 60 seconds before checking OAuth2 Proxy
  ansible.builtin.wait_for:
    seconds: 60

- name: Dump the OAuth2 Proxy pod info
  shell: >-
    kubectl get pods -n kube-system -l app=oauth2-proxy -o wide
  register: oauth2_proxy_pod_dump
  changed_when: false

- name: Describe the OAuth2 Proxy pod
  shell: >-
    kubectl describe pod -n kube-system -l app=oauth2-proxy
  register: oauth2_proxy_pod_desc
  changed_when: false

- name: Dump OAuth2 Proxy logs
  shell: >-
    kubectl logs -n kube-system -l app=oauth2-proxy --tail=100
  register: oauth2_proxy_logs
  changed_when: false

- name: Install OAuth2 Proxy Auth Middleware
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: traefik.io/v1alpha1
      kind: Middleware
      metadata:
        name: oauth2-proxy-auth
        namespace: kube-system
      spec:
        forwardAuth:
          address: 'https://{{ server_hostname }}/oauth2/auth'
          trustForwardHeader: true
          authResponseHeaders:
            - X-Auth-Request-Access-Token

- name: Install OAuth2 Proxy Error Middleware
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: traefik.io/v1alpha1
      kind: Middleware
      metadata:
        name: oauth2-proxy-error
        namespace: kube-system
      spec:
        errors:
          status:
            - '401-403'
          # # Not in our traefik version yet, but useful for future reference
          # statusRewrites:
          #   - "401-403": 302
          service:
            name: oauth2-proxy
            port: 80
          query: '/oauth2/sign_in?rd={url}'
