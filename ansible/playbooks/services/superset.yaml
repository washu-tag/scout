- name: Add Superset Helm repository
  kubernetes.core.helm_repository:
    name: superset
    repo_url: https://apache.github.io/superset

- name: Create namespace
  kubernetes.core.k8s:
    name: superset
    api_version: v1
    kind: Namespace
    state: present

- name: Create ConfigMap for datasource and dashboard yaml
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: dashboard-config
        namespace: superset
      data:
        metadata.yaml: |
          {{ lookup('file', '{{ scout_repo_dir }}/analytics/metadata.yaml') }}
        Scout_Data_Lake.yaml: |
          {{ lookup('file', '{{ scout_repo_dir }}/analytics/databases/Scout_Data_Lake.yaml') }}
        reports.yaml: |
          {{ lookup('file', '{{ scout_repo_dir }}/analytics/datasets/Scout_Data_Lake/reports.yaml') }}
        Modality_2.yaml: |
          {{ lookup('file', '{{ scout_repo_dir }}/analytics/charts/Modality_2.yaml') }}
        Count_1.yaml: |
          {{ lookup('file', '{{ scout_repo_dir }}/analytics/charts/Count_1.yaml') }}
        Facility_by_date_8.yaml: |
          {{ lookup('file', '{{ scout_repo_dir }}/analytics/charts/Facility_by_date_8.yaml') }}
        Race_4.yaml: |
          {{ lookup('file', '{{ scout_repo_dir }}/analytics/charts/Race_4.yaml') }}
        Report_5.yaml: |
          {{ lookup('file', '{{ scout_repo_dir }}/analytics/charts/Report_5.yaml') }}
        Service_Name_6.yaml: |
          {{ lookup('file', '{{ scout_repo_dir }}/analytics/charts/Service_Name_6.yaml') }}
        Study_Instance_UID_7.yaml: |
          {{ lookup('file', '{{ scout_repo_dir }}/analytics/charts/Study_Instance_UID_7.yaml') }}
        Sex_3.yaml: |
          {{ lookup('file', '{{ scout_repo_dir }}/analytics/charts/Sex_3.yaml') }}
        Scout_1.yaml: |
          {{ lookup('file', '{{ scout_repo_dir }}/analytics/dashboards/Scout_1.yaml') }}

- name: Install/Upgrade Superset Helm chart
  kubernetes.core.helm:
    name: superset
    chart_ref: superset/superset
    chart_version: ~0.14.2
    release_namespace: superset
    create_namespace: true
    release_state: present
    update_repo_cache: true
    wait: true
    wait_timeout: 15m
    atomic: true
    values:
      extraSecretEnv:
        SUPERSET_SECRET_KEY: '{{ superset_secret }}'
      ingress:
        enabled: true
        ingressClassName: traefik
        path: /
        hosts:
          - '{{ server_hostname }}'
      postgresql:
        enabled: false
      supersetNode:
        connections:
          db_host: 'postgresql-cluster-rw.{{ postgres_cluster_namespace }}'
          db_port: '5432'
          db_user: '{{ superset_postgres_user }}'
          db_pass: '{{ superset_postgres_password }}'
          db_name: superset
      configOverrides:
        branding: |
          APP_NAME = "Scout Analytics"
          APP_ICON = "https://{{ server_hostname }}/launchpad/scout.png"
          APP_ICON_WIDTH = 200
          LOGO_TARGET_PATH = "https://{{ server_hostname }}/launchpad"
          LOGO_TOOLTIP = "Scout Launchpad"
          FAVICONS = [{"href": "https://{{ server_hostname }}/launchpad/scout.png"}]
        custom_routing: |
          from flask import redirect, url_for
          from flask_appbuilder import expose, IndexView

          from superset.superset_typing import FlaskResponse

          class SupersetIndexView(IndexView):
              @expose("/")
              def index(self) -> FlaskResponse:
                  return redirect(url_for("Superset.dashboard", dashboard_id_or_slug="scout"))

          FAB_INDEX_VIEW = f"{SupersetIndexView.__module__}.{SupersetIndexView.__name__}"
      extraVolumes:
        - name: dashboard-config
          configMap:
            name: dashboard-config
            items:
              - key: metadata.yaml
                path: analytics/metadata.yaml
              - key: Scout_Data_Lake.yaml
                path: analytics/databases/Scout_Data_Lake.yaml
              - key: reports.yaml
                path: analytics/datasets/Scout_Data_Lake/reports.yaml
              - key: Modality_2.yaml
                path: analytics/charts/Modality_2.yaml
              - key: Count_1.yaml
                path: analytics/charts/Count_1.yaml
              - key: Facility_by_date_8.yaml
                path: analytics/charts/Facility_by_date_8.yaml
              - key: Race_4.yaml
                path: analytics/charts/Race_4.yaml
              - key: Report_5.yaml
                path: analytics/charts/Report_5.yaml
              - key: Service_Name_6.yaml
                path: analytics/charts/Service_Name_6.yaml
              - key: Study_Instance_UID_7.yaml
                path: analytics/charts/Study_Instance_UID_7.yaml
              - key: Sex_3.yaml
                path: analytics/charts/Sex_3.yaml
              - key: Scout_1.yaml
                path: analytics/dashboards/Scout_1.yaml

      extraVolumeMounts:
        - name: dashboard-config
          mountPath: /app/dashboard-config

      bootstrapScript: |
        #!/bin/bash
        # Install system-level dependencies
        apt-get update && apt-get install -y \
          python3-dev \
          build-essential \
          pkg-config \
          zip

        # Install required Python packages
        pip install \
          authlib \
          psycopg2-binary \
          pyhive \
          trino \
          pillow

        {% raw %}
        if [ ! -f ~/bootstrap ]; then echo 'Running Superset with uid {{ .Values.runAsUser }}' > ~/bootstrap; fi
        {% endraw %}
      init:
        initscript: |-
          {% raw %}
          #!/bin/sh
          set -eu
          echo "Upgrading DB schema..."
          superset db upgrade
          echo "Initializing roles..."
          superset init
          {{ if .Values.init.createAdmin }}
          echo "Creating admin user..."
          superset fab create-admin \
                          --username {{ .Values.init.adminUser.username }} \
                          --firstname {{ .Values.init.adminUser.firstname }} \
                          --lastname {{ .Values.init.adminUser.lastname }} \
                          --email {{ .Values.init.adminUser.email }} \
                          --password {{ .Values.init.adminUser.password }} \
                          || true
          {{- end }}
          {{ if .Values.init.loadExamples }}
          echo "Loading examples..."
          superset load_examples
          {{- end }}
          if [ -f "{{ .Values.extraConfigMountPath }}/import_datasources.yaml" ]; then
            echo "Importing database connections.... "
            superset import_datasources -p {{ .Values.extraConfigMountPath }}/import_datasources.yaml
          fi
          # Import the dashboard
          if [ -d /app/dashboard-config ]; then
            echo "Importing dashboard..."
            cd /app/dashboard-config
            zip -r ~/dashboard.zip .
            cd -
            superset import-dashboards -p ~/dashboard.zip -u admin
            result=$?
            if [ $result != 0 ]; then
              echo "Error importing dashboard"
              exit $result
            fi
            rm -f ~/dashboard.zip
            echo "Dashboard imported successfully"
          fi
          {% endraw %}
