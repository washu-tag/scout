- name: Add Superset Helm repository
  kubernetes.core.helm_repository:
    name: superset
    repo_url: https://apache.github.io/superset
  delegate_to: localhost

- name: Create namespace
  kubernetes.core.k8s:
    name: superset
    api_version: v1
    kind: Namespace
    state: present
  delegate_to: localhost

- name: Find all analytics YAML files
  delegate_to: localhost
  ansible.builtin.find:
    paths: '{{ scout_repo_dir }}/analytics'
    recurse: true
    file_type: file
    patterns: '*.yaml'
  register: analytics_files

- name: Build ConfigMap data and items list
  no_log: true
  vars:
    analytics_root: '{{ (scout_repo_dir | realpath) ~ "/analytics" }}'
  ansible.builtin.set_fact:
    superset_dashboard_data: >-
      {{
        superset_dashboard_data | default({}) |
        combine({ (item.path | basename): lookup('file', item.path) })
      }}
    superset_dashboard_items: >-
      {{
        superset_dashboard_items | default([]) + [
          {
            'key': (item.path | basename),
            'path': ((item.path | realpath) | regex_replace('^' ~ analytics_root ~ '/', 'analytics/'))
          }
        ]
      }}
  loop: '{{ analytics_files.files }}'
  loop_control:
    label: '{{ (item.path | realpath) | regex_replace("^" ~ analytics_root ~ "/", "") }}'
  delegate_to: localhost

- name: Create ConfigMap for datasource and dashboard yaml
  no_log: true
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: dashboard-config
        namespace: superset
      data: '{{ superset_dashboard_data | default({}) }}'
  delegate_to: localhost

- name: Install/Upgrade Superset Helm chart
  kubernetes.core.helm:
    name: superset
    chart_ref: superset/superset
    chart_version: 0.14.2
    release_namespace: superset
    create_namespace: true
    release_state: present
    update_repo_cache: true
    wait: true
    wait_timeout: 15m
    atomic: true
    values:
      image:
        repository: '{{ superset_image | default("ghcr.io/washu-tag/superset") }}'
        tag: 4.1.2
      redis:
        image:
          repository: bitnamilegacy/redis
      extraSecretEnv:
        SUPERSET_SECRET_KEY: '{{ superset_secret }}'
      ingress:
        enabled: true
        ingressClassName: traefik
        path: /
        hosts:
          - '{{ server_hostname }}'
      postgresql:
        enabled: false
      supersetNode:
        connections:
          db_host: 'postgresql-cluster-rw.{{ postgres_cluster_namespace }}'
          db_port: '5432'
          db_user: '{{ superset_postgres_user }}'
          db_pass: '{{ superset_postgres_password }}'
          db_name: superset
      configOverrides:
        branding: |
          APP_NAME = "Scout Analytics"
          APP_ICON = "https://{{ server_hostname }}/launchpad/scout.png"
          APP_ICON_WIDTH = 200
          LOGO_TARGET_PATH = "https://{{ server_hostname }}/launchpad"
          LOGO_TOOLTIP = "Scout Launchpad"
          FAVICONS = [{"href": "https://{{ server_hostname }}/launchpad/scout.png"}]
        custom_routing: |
          from flask import redirect, url_for
          from flask_appbuilder import expose, IndexView

          from superset.superset_typing import FlaskResponse

          class SupersetIndexView(IndexView):
              @expose("/")
              def index(self) -> FlaskResponse:
                  return redirect(url_for("Superset.dashboard", dashboard_id_or_slug="scout"))

          FAB_INDEX_VIEW = f"{SupersetIndexView.__module__}.{SupersetIndexView.__name__}"
      extraVolumes:
        - name: dashboard-config
          configMap:
            name: dashboard-config
            items: '{{ superset_dashboard_items | default([]) }}'

      extraVolumeMounts:
        - name: dashboard-config
          mountPath: /app/dashboard-config

      init:
        initscript: |-
          {% raw %}
          #!/bin/sh
          set -eu
          echo "Upgrading DB schema..."
          superset db upgrade
          echo "Initializing roles..."
          superset init
          {{ if .Values.init.createAdmin }}
          echo "Creating admin user..."
          superset fab create-admin \
                          --username {{ .Values.init.adminUser.username }} \
                          --firstname {{ .Values.init.adminUser.firstname }} \
                          --lastname {{ .Values.init.adminUser.lastname }} \
                          --email {{ .Values.init.adminUser.email }} \
                          --password {{ .Values.init.adminUser.password }} \
                          || true
          {{- end }}
          {{ if .Values.init.loadExamples }}
          echo "Loading examples..."
          superset load_examples
          {{- end }}
          if [ -f "{{ .Values.extraConfigMountPath }}/import_datasources.yaml" ]; then
            echo "Importing database connections.... "
            superset import_datasources -p {{ .Values.extraConfigMountPath }}/import_datasources.yaml
          fi
          # Import the dashboard
          if [ -d /app/dashboard-config ]; then
            echo "Importing dashboard..."
            cd /app/dashboard-config
            zip -r ~/dashboard.zip .
            cd -
            superset import-dashboards -p ~/dashboard.zip -u admin
            result=$?
            if [ $result != 0 ]; then
              echo "Error importing dashboard"
              exit $result
            fi
            rm -f ~/dashboard.zip
            echo "Dashboard imported successfully"
          fi
          {% endraw %}
  delegate_to: localhost
