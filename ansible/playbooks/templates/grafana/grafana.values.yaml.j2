grafana.ini:
  auth:
    disable_login_form: true
  auth.generic_oauth:
    enabled: true
    name: Keycloak-OAuth
    allow_sign_up: true
    auto_login: true
    client_id: "{{ keycloak_grafana_client_id }}"
    client_secret: $__file{/etc/secrets/keycloak-grafana/client-secret}
    scopes: openid microprofile-jwt
    email_attribute_path: email
    login_attribute_path: preferred_username
    name_attribute_path: name
    auth_url: 'https://kc.{{ server_hostname }}/realms/scout/protocol/openid-connect/auth'
    token_url: 'https://kc.{{ server_hostname }}/realms/scout/protocol/openid-connect/token'
    api_url: 'https://kc.{{ server_hostname }}/realms/scout/protocol/openid-connect/userinfo'
    role_attribute_path: contains(groups[*], 'grafana-admin') && 'Admin' || 'None'
    role_attribute_strict: true
    allow_assign_grafana_admin: true
    signout_redirect_url: 'https://oa2p.{{ server_hostname }}/sign_out'
  server:
    root_url: 'https://grafana.{{ server_hostname }}'
  metrics:
    enabled: true
  dashboards:
    default_home_dashboard_path: /tmp/dashboards/hl7-ingest-dashboard.json
{% if grafana_alert_contact_point == 'email' %}
  smtp:
    enabled: true
    host: "{{ grafana_smtp_host }}"
    user: $__file{/etc/secrets/smtp-grafana/user}
    password: $__file{/etc/secrets/smtp-grafana/password}
    from_address: "{{ grafana_smtp_from_address }}"
    from_name: "{{ grafana_smtp_from_name | default('Scout') }}"
    skip_verify: "{{ grafana_smtp_skip_verify | default(false) }}"
{% endif %}

extraSecretMounts:
  - name: keycloak-grafana-client-secret
    mountPath: /etc/secrets/keycloak-grafana
    secretName: keycloak-grafana-client-secret
    readOnly: true
    optional: false
    subPath: ""
{% if grafana_alert_contact_point == 'email' %}
  - name: smtp-grafana
    mountPath: /etc/secrets/smtp-grafana
    secretName: smtp-grafana
    readOnly: true
    optional: false
    subPath: ""
{% endif %}

ingress:
  enabled: true
  ingressClassName: traefik
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: >
      kube-system-oauth2-proxy-error@kubernetescrd,
      kube-system-oauth2-proxy-auth@kubernetescrd
  hosts:
    - 'grafana.{{ server_hostname }}'

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        uid: prometheus_datasource_01
        url: 'http://prometheus-server.{{ prometheus_namespace }}.svc.cluster.local:9090'
        editable: false
        isDefault: true

      - name: Loki
        type: loki
        datasourceUid: loki_datasource_01
        url: 'http://loki-gateway.{{ loki_namespace }}.svc.cluster.local/'
        editable: false
        isDefault: false

sidecar:
  alerts:
    enabled: true
    label: grafana_alert
    labelValue: '1'
    watchMethod: SLEEP
  dashboards:
    enabled: true
    label: grafana_dashboard
    labelValue: '1'
    watchMethod: SLEEP
    provider:
      folder: Scout
  datasources:
    enabled: true

persistence:
  enabled: true
  storageClassName: '{{ grafana_storage_class }}'

livenessProbe:
  initialDelaySeconds: 180
