- name: Apply Grafana {{ grafana_resource.resource_type }} ConfigMaps
  block:
    - name: Set processing variables based on file pattern
      set_fact:
        is_template: "{{ true if grafana_resource.file_pattern.endswith('.j2') else false }}"
        source_extension: "{{ grafana_resource.file_pattern | regex_replace('^\\*', '') }}"
        target_extension: "{{ grafana_resource.file_pattern | regex_replace('^\\*', '') | regex_replace('\\.j2$', '') }}"
        content_format: "{{ 'to_nice_yaml' if ('.yaml' in grafana_resource.file_pattern or '.yml' in grafana_resource.file_pattern) else 'to_nice_json' }}"

    - name: Find all Grafana {{ grafana_resource.resource_type }}s
      find:
        paths: '{{ grafana_resource.find_path }}'
        patterns: '{{ grafana_resource.file_pattern }}'
      register: found_files

    - name: Create ConfigMap for each Grafana {{ grafana_resource.resource_type }}
      vars:
        cm_name: "{{ item.path | basename | regex_replace(source_extension, '') }}"
        file_name: '{{ item.path | basename | regex_replace(source_extension, target_extension) }}'
        file_content: "{{ lookup('template', item.path) if is_template else lookup('file', item.path) }}"
        formatted_content: >-
          {% if content_format == 'to_nice_yaml' %}
          {{ file_content | to_nice_yaml }}
          {% else %}
          {{ file_content | to_nice_json }}
          {% endif %}
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: '{{ cm_name }}'
            namespace: '{{ grafana_namespace }}'
            labels:
              '{{ grafana_resource.label_key }}': '1'
          data:
            '{{ file_name }}': '{{ formatted_content }}'
      loop: '{{ found_files.files }}'
      loop_control:
        label: '{{ item.path | basename }}'
