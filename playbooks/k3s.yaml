---
- name: Shared pre-requisites for K3s
  hosts: k3s_cluster
  vars:
    uninstall_script: '/usr/local/bin/k3s-uninstall.sh'
  tasks:
    - name: Create /root/bin directory
      ansible.builtin.file:
        path: /root/bin
        state: directory
        mode: '0700'

    - name: Download K3s installation script
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: /root/bin/get.k3s.io.sh
        mode: '0755'

    - name: Add python kubernetes library from system package
      package:
        name: python3-kubernetes
        state: present

################################################################################
- hosts: server
  name: Install k3s on server node
  vars:
    uninstall_script: '/usr/local/bin/k3s-uninstall.sh'
    cert_path: '/root/{{ server_hostname }}.crt'
    key_path: '/root/{{ server_hostname }}.key'
  environment:
    KUBECONFIG: '{{ kubeconfig_yaml }}'
  tasks:
    - name: Create directory for K3s data
      file:
        path: '{{ base_dir }}'
        state: directory
        mode: '0755'

    - name: Install k3s server
      ansible.builtin.command:
        cmd: /root/bin/get.k3s.io.sh
        creates: '{{ uninstall_script }}'
      environment:
        INSTALL_K3S_EXEC: >-
          --default-local-storage-path={{ base_dir }}
          --write-kubeconfig-mode=0640
        INSTALL_K3S_VERSION: "{{ k3s_version | default('') }}"
        K3S_TOKEN: '{{ k3s_token }}'
        UNINSTALL_K3S_SH: '{{ uninstall_script }}'

    - name: Update kubeconfig group permissions since write-kubeconfig-group isn't working
      file:
        path: '{{ kubeconfig_yaml }}'
        state: file
        mode: '0640'
        group: '{{ kubeconfig_group }}'

    - name: Ensure k3s control plane server is started
      ansible.builtin.systemd:
        name: k3s
        state: started
        enabled: true
        scope: system
      register: k3s_systemd_start_k3s
      until: k3s_systemd_start_k3s is succeeded
      retries: 3
      delay: 3
      failed_when:
        - k3s_systemd_start_k3s is not succeeded
        - not ansible_check_mode

    - name: Check that the server is available to accept connections
      ansible.builtin.wait_for:
        port: 6443
        host: 127.0.0.1
        delay: 5
        sleep: 5
        timeout: 300

    - name: Check that server is ready
      ansible.builtin.command:
        cmd: kubectl get nodes
      changed_when: false
      failed_when: >-
        kubectl_get_nodes_result.stdout.find("was refused") != -1 or
        kubectl_get_nodes_result.stdout.find("ServiceUnavailable") != -1
      register: kubectl_get_nodes_result
      until:
        - kubectl_get_nodes_result.rc == 0
        - kubectl_get_nodes_result.stdout.find("NotReady") == -1
      retries: 30
      delay: 5

    - name: Add storage class
      kubernetes.core.k8s:
        state: present
        src: '{{ scout_repo_dir }}/helm/storageclass.yaml'
        wait: yes
        wait_timeout: 60

################################################################################
- hosts: agents
  name: Install k3s on agent nodes
  vars:
    uninstall_script: '/usr/local/bin/k3s-agent-uninstall.sh'
  tasks:
    - name: Install k3s agent
      ansible.builtin.command:
        cmd: /root/bin/get.k3s.io.sh
        creates: '{{ uninstall_script }}'
      environment:
        INSTALL_K3S_VERSION: "{{ k3s_version | default('') }}"
        K3S_URL: 'https://{{ groups["server"][0] }}:6443'
        K3S_TOKEN: '{{ k3s_token }}'
        UNINSTALL_K3S_SH: '{{ uninstall_script }}'
